{"version":3,"file":"static/js/267.83689553.chunk.js","mappings":"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","sources":["components/projects/ProjectCard.jsx","../node_modules/react-bootstrap/esm/Badge.js","../node_modules/react-bootstrap/esm/Button.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js"],"sourcesContent":["/* eslint-disable react/forbid-prop-types */\nimport React, { useContext } from 'react';\nimport {\n  Button, Card, Badge, Col,\n} from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { ThemeContext } from 'styled-components';\nimport ReactMarkdown from 'react-markdown';\n\nconst styles = {\n  badgeStyle: {\n    paddingLeft: 10,\n    paddingRight: 10,\n    paddingTop: 5,\n    paddingBottom: 5,\n    margin: 5,\n  },\n  cardStyle: {\n    borderRadius: 10,\n  },\n  cardTitleStyle: {\n    fontSize: 24,\n    fontWeight: 700,\n  },\n  cardTextStyle: {\n    textAlign: 'left',\n  },\n  linkStyle: {\n    textDecoration: 'none',\n    padding: 10,\n  },\n  buttonStyle: {\n    margin: 5,\n  },\n};\n\nconst ProjectCard = (props) => {\n  const theme = useContext(ThemeContext);\n  const parseBodyText = (text) => <ReactMarkdown children={text} />;\n\n  const { project } = props;\n\n  return (\n    <Col>\n      <Card\n        style={{\n          ...styles.cardStyle,\n          backgroundColor: theme.cardBackground,\n          borderColor: theme.cardBorderColor,\n        }}\n        text={theme.bsSecondaryVariant}\n      >\n        <Card.Img variant=\"top\" src={project?.image} />\n        <Card.Body>\n          <Card.Title style={styles.cardTitleStyle}>{project.title}</Card.Title>\n          <Card.Text style={styles.cardTextStyle}>\n            {parseBodyText(project.bodyText)}\n          </Card.Text>\n        </Card.Body>\n\n        <Card.Body>\n          {project?.links?.map((link) => (\n            <Button\n              key={link.href}\n              style={styles.buttonStyle}\n              variant={'outline-' + theme.bsSecondaryVariant}\n              onClick={() => window.open(link.href, '_blank')}\n            >\n              {link.text}\n            </Button>\n          ))}\n        </Card.Body>\n        {project.tags && (\n          <Card.Footer style={{ backgroundColor: theme.cardFooterBackground }}>\n            {project.tags.map((tag) => (\n              <Badge\n                key={tag}\n                pill\n                bg={theme.bsSecondaryVariant}\n                text={theme.bsPrimaryVariant}\n                style={styles.badgeStyle}\n              >\n                {tag}\n              </Badge>\n            ))}\n          </Card.Footer>\n        )}\n      </Card>\n    </Col>\n  );\n};\n\nProjectCard.propTypes = {\n  project: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    bodyText: PropTypes.string.isRequired,\n    image: PropTypes.string,\n    links: PropTypes.arrayOf(PropTypes.object),\n    tags: PropTypes.arrayOf(PropTypes.string),\n  }).isRequired,\n};\n\nexport default ProjectCard;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  bg: 'primary',\n  pill: false\n};\nconst Badge = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  bg,\n  pill,\n  text,\n  className,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, pill && `rounded-pill`, text && `text-${text}`, bg && `bg-${bg}`)\n  });\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant,\n  size,\n  active,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, { ...buttonProps,\n    ...props,\n    ref: ref,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && props.disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});"],"names":["styles","badgeStyle","paddingLeft","paddingRight","paddingTop","paddingBottom","margin","cardStyle","borderRadius","cardTitleStyle","fontSize","fontWeight","cardTextStyle","textAlign","linkStyle","textDecoration","padding","buttonStyle","props","text","theme","useContext","ThemeContext","project","style","backgroundColor","cardBackground","borderColor","cardBorderColor","bsSecondaryVariant","variant","src","image","title","bodyText","children","links","map","link","onClick","window","open","href","tags","cardFooterBackground","tag","pill","bg","bsPrimaryVariant","Badge","React","ref","bsPrefix","className","as","Component","prefix","useBootstrapPrefix","_jsx","classNames","displayName","defaultProps","Button","size","active","useButtonProps","tagName","buttonProps","disabled","CardImg","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","value","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","Card","border","body","Object","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay"],"sourceRoot":""}