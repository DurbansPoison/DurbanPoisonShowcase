{"version":3,"file":"static/js/161.1e48511f.chunk.js","mappings":"gKA0FAA,oBAAoBC,UAAY,CAC9BC,gBAAiBC,IAAAA,MAAgB,CACjCC,OAAQD,IAAAA,MAAgB,CACtBE,MAAOF,IAAAA,OACPG,MAAOH,IAAAA,OACPI,MAAOJ,IAAAA,SACNK,cAGL,6B","sources":["components/additionalLinks/AdditionalLinksCard.jsx"],"sourcesContent":["/* eslint-disable react/prop-types */\n/* eslint-disable no-undef */\n/* eslint-disable no-unused-vars */\n// @ts-nocheck\n/* eslint-disable react/forbid-prop-types */\nimport React, { useContext } from 'react';\nimport {\n  Button, Card, Badge, Col,\n} from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { ThemeContext } from 'styled-components';\n\nconst styles = {\n  badgeStyle: {\n    paddingLeft: 10,\n    paddingRight: 10,\n    paddingTop: 5,\n    paddingBottom: 5,\n    margin: 5,\n  },\n  cardStyle: {\n    borderRadius: 10,\n  },\n  cardTitleStyle: {\n    fontSize: 24,\n    fontWeight: 700,\n  },\n  cardTextStyle: {\n    textAlign: 'left',\n  },\n  linkStyle: {\n    textDecoration: 'none',\n    padding: 10,\n  },\n  buttonStyle: {\n    margin: 5,\n  },\n};\n\nconst AdditionLinksCard = (props) => {\n  const theme = useContext(ThemeContext);\n  const { additionalLinksCard } = props;\n\n  return (\n    <Col>\n      <Card\n        style={{\n          ...styles.cardStyle,\n          backgroundColor: theme.cardBackground,\n          borderColor: theme.cardBorderColor,\n        }}\n        text={theme.bsSecondaryVariant}\n      >\n        <Card.Img variant=\"top\" src={additionalLinks?.image} />\n        <Card.Body>\n          <Card.Title style={styles.cardTitleStyle}>{additionalLinks.title}</Card.Title>\n        </Card.Body>\n\n        <Card.Body>\n          {additionalLinks?.links?.map((link) => (\n            <Button\n              key={link.href}\n              style={styles.buttonStyle}\n              variant={'outline-' + theme.bsSecondaryVariant}\n              onClick={() => window.open(link.href, '_blank')}\n            >\n              {link.text}\n            </Button>\n          ))}\n        </Card.Body>\n        {additionalLinks.tags && (\n          <Card.Footer style={{ backgroundColor: theme.cardFooterBackground }}>\n            {additionalLinks.tags.map((link) => (\n              <Badge\n                key={tag}\n                pill\n                bg={theme.bsSecondaryVariant}\n                text={theme.bsPrimaryVariant}\n                style={styles.badgeStyle}\n              >\n                {tag}\n              </Badge>\n            ))}\n          </Card.Footer>\n        )}\n      </Card>\n    </Col>\n  );\n};\n\nadditionalLinksCard.propTypes = {\n  additionalLinks: PropTypes.shape({\n\t\theader: PropTypes.shape({\n    title: PropTypes.string,\n    image: PropTypes.string,\n    links: PropTypes.string,\n  }).isRequired,\n})\n};\nexport default AdditionalLinksCard;\n"],"names":["additionalLinksCard","propTypes","additionalLinks","PropTypes","header","title","image","links","isRequired"],"sourceRoot":""}