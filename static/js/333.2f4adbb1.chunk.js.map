{"version":3,"file":"static/js/333.2f4adbb1.chunk.js","mappings":"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","sources":["components/Header.jsx","components/InDevelopment.jsx","components/inDevelopment/InDevelopmentCard.jsx","../node_modules/react-bootstrap/esm/Badge.js","../node_modules/react-bootstrap/esm/Button.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/Row.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../App.css';\n\nfunction Header(props) {\n  const { title } = props;\n  return <div className=\"header\">{title}</div>;\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Container, Row, Button } from 'react-bootstrap';\nimport { ThemeContext } from 'styled-components';\nimport PropTypes from 'prop-types';\nimport Fade from 'react-reveal/Fade';\nimport Header from './Header';\nimport endpoints from '../constants/endpoints';\nimport InDevelopmentCard from './inDevelopment/InDevelopmentCard';\nimport FallbackSpinner from './FallbackSpinner';\n\nconst styles = {\n  containerStyle: {\n    marginBottom: 25,\n  },\n  showMoreStyle: {\n    margin: 25,\n  },\n};\nconst inDevelopment = (props) => {\n  const theme = useContext(ThemeContext);\n  const { header } = props;\n  const [data, setData] = useState(null);\n  const [showMore, setShowMore] = useState(false);\n\n  useEffect(() => {\n    fetch(endpoints.inDevelopment, {\n      method: 'GET',\n    })\n      .then((res) => res.json())\n      .then((res) => setData(res))\n      .catch((err) => err);\n  }, []);\n  const numberOfItems = showMore && data ? data.length : 6;\n  return (\n    <>\n      <Header title={header} />\n      {data ? (\n        <div className=\"section-content-container\">\n          <Container style={styles.containerStyle}>\n            <Row xs={1} sm={1} md={2} lg={3} className=\"g-4\">\n              {data.inDevelopment?.slice(0, numberOfItems).map((InDevelopment) => (\n                <Fade key={InDevelopment.title}>\n                  <InDevelopmentCard inDevelopment={inDevelopment} />\n                </Fade>\n              ))}\n            </Row>\n\n            {!showMore && (\n            <Button\n              style={styles.showMoreStyle}\n              variant={theme.bsSecondaryVariant}\n              onClick={() => setShowMore(true)}\n            >\n              show more\n            </Button>\n            )}\n          </Container>\n        </div>\n      ) : (\n        <FallbackSpinner />\n      )}\n    </>\n  );\n};\n\ninDevelopment.propTypes = {\n  header: PropTypes.string.isRequired,\n};\n\nexport default inDevelopment;\n","// @ts-nocheck\n/* eslint-disable react/forbid-prop-types */\nimport React, { useContext } from 'react';\nimport {\n  Button, Card, Badge, Col,\n} from 'react-bootstrap';\nimport PropTypes from 'prop-types';\nimport { ThemeContext } from 'styled-components';\nimport ReactMarkdown from 'react-markdown';\n\nconst styles = {\n  badgeStyle: {\n    paddingLeft: 10,\n    paddingRight: 10,\n    paddingTop: 5,\n    paddingBottom: 5,\n    margin: 5,\n  },\n  cardStyle: {\n    borderRadius: 10,\n  },\n  cardTitleStyle: {\n    fontSize: 24,\n    fontWeight: 700,\n  },\n  cardTextStyle: {\n    textAlign: 'left',\n  },\n  linkStyle: {\n    textDecoration: 'none',\n    padding: 10,\n  },\n  buttonStyle: {\n    margin: 5,\n  },\n};\n\nconst InDevelopmentCard = (props) => {\n  const theme = useContext(ThemeContext);\n  const parseBodyText = (text) => <ReactMarkdown children={text} />;\n\n  const { inDevelopment } = props;\n\n  return (\n    <Col>\n      <Card\n        style={{\n          ...styles.cardStyle,\n          backgroundColor: theme.cardBackground,\n          borderColor: theme.cardBorderColor,\n        }}\n        text={theme.bsSecondaryVariant}\n      >\n        <Card.Img variant=\"top\" src={inDevelopment?.image} />\n        <Card.Body>\n          <Card.Title style={styles.cardTitleStyle}>{inDevelopment.title}</Card.Title>\n          <Card.Text style={styles.cardTextStyle}>\n            {parseBodyText(inDevelopment.bodyText)}\n          </Card.Text>\n        </Card.Body>\n\n        <Card.Body>\n          {inDevelopment?.links?.map((link) => (\n            <Button\n              key={link.href}\n              style={styles.buttonStyle}\n              variant={'outline-' + theme.bsSecondaryVariant}\n              onClick={() => window.open(link.href, '_blank')}\n            >\n              {link.text}\n            </Button>\n          ))}\n        </Card.Body>\n        {inDevelopment.tags && (\n          <Card.Footer style={{ backgroundColor: theme.cardFooterBackground }}>\n            {inDevelopment.tags.map((tag) => (\n              <Badge\n                key={tag}\n                pill\n                bg={theme.bsSecondaryVariant}\n                text={theme.bsPrimaryVariant}\n                style={styles.badgeStyle}\n              >\n                {tag}\n              </Badge>\n            ))}\n          </Card.Footer>\n        )}\n      </Card>\n    </Col>\n  );\n};\n\nInDevelopmentCard.propTypes = {\n  inDevelopment: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    bodyText: PropTypes.string.isRequired,\n    image: PropTypes.string,\n    links: PropTypes.arrayOf(PropTypes.object),\n    tags: PropTypes.arrayOf(PropTypes.string),\n  }).isRequired,\n};\n\nexport default InDevelopmentCard;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  bg: 'primary',\n  pill: false\n};\nconst Badge = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  bg,\n  pill,\n  text,\n  className,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, pill && `rounded-pill`, text && `text-${text}`, bg && `bg-${bg}`)\n  });\n});\nBadge.displayName = 'Badge';\nBadge.defaultProps = defaultProps;\nexport default Badge;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  variant: 'primary',\n  active: false,\n  disabled: false\n};\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant,\n  size,\n  active,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, { ...buttonProps,\n    ...props,\n    ref: ref,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && props.disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nButton.defaultProps = defaultProps;\nexport default Button;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;"],"names":["props","title","className","styles","containerStyle","marginBottom","showMoreStyle","margin","inDevelopment","theme","useContext","ThemeContext","header","useState","data","setData","showMore","setShowMore","useEffect","fetch","endpoints","method","then","res","json","catch","err","numberOfItems","length","style","xs","sm","md","lg","slice","map","InDevelopment","variant","bsSecondaryVariant","onClick","badgeStyle","paddingLeft","paddingRight","paddingTop","paddingBottom","cardStyle","borderRadius","cardTitleStyle","fontSize","fontWeight","cardTextStyle","textAlign","linkStyle","textDecoration","padding","buttonStyle","text","backgroundColor","cardBackground","borderColor","cardBorderColor","src","image","bodyText","children","links","link","window","open","href","tags","cardFooterBackground","tag","pill","bg","bsPrimaryVariant","Badge","React","ref","bsPrefix","as","Component","prefix","useBootstrapPrefix","_jsx","classNames","displayName","defaultProps","Button","size","active","useButtonProps","tagName","buttonProps","disabled","CardImg","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","value","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","Card","border","body","Object","assign","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","Row","decoratedBsPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push"],"sourceRoot":""}